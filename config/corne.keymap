/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Mouse speed configuration

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80    // default: 10

/ {
    // Mouse speed and acceleration settings

    behaviors {
        // Home row mod-tap timing configuration

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            time-to-max-speed-ms = <300>;
            acceleration-exponent = <2>;
        };

        msc {
            time-to-max-speed-ms = <150>;
            acceleration-exponent = <1>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Left_Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        Right_Parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 8>;
        };

        Left_Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 3>;
        };

        Right_Brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <3 4>;
        };

        Left_Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
        };

        Right_Bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <16 28>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 14>;
        };

        Equal {
            bindings = <&kp EQUAL>;
            key-positions = <16 15>;
        };

        Plus {
            bindings = <&kp PLUS>;
            key-positions = <16 4>;
        };

        Single_Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <2 3 4>;
        };

        Double_Quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <16 15 14>;
        };

        Caps_Word {
            bindings = <&caps_word>;
            key-positions = <26 27 28>;
        };

        Pipe {
            bindings = <&kp PIPE>;
            key-positions = <19 7>;
        };

        Back_Slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <31 19>;
        };

        Less_Than {
            bindings = <&kp LESS_THAN>;
            key-positions = <19 20>;
        };

        Greater_Than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <20 21>;
        };

        Colon {
            bindings = <&kp COLON>;
            key-positions = <7 8 9>;
        };

        Semi_Colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20 21>;
        };

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <31 32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB             &kp Q       &kp W       &kp E        &kp R        &kp T        &kp Y    &kp U        &kp I        &kp O       &kp P          &kp BSPC
&mt LEFT_SHIFT ESC  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G        &kp H    &hm RSHFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI  &kp SQT
&kp LCTRL           &kp Z       &kp X       &kp C        &kp V        &kp B        &kp N    &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp ESC
                                            &kp LGUI     &lt 1 TAB    &kp SPACE    &kp RET  &lt 2 BSPC   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | M_L | M_D | M_U | M_R | LCK |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     | MCK | P_U | P_D | RCK |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1          &kp N2          &kp N3        &kp N4           &kp N5       &kp N6    &kp N7         &kp N8       &kp N9     &kp N0  &kp BSPC
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MCLK    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans          &trans          &mkp LCLK     &mkp RCLK        &trans       &trans    &kp PAGE_DOWN  &kp PAGE_UP  &trans     &trans  &trans
                                        &kp LGUI      &trans           &kp SPACE    &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |BTCLR|   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &kp LGUI      &trans        &kp SPACE       &kp RET    &trans     &kp RALT
            >;
        };
    };
};
